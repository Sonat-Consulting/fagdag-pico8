pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--slide definitions

music(0)

--
--!"#%&/()=
--…∧░➡️⧗▤⬆️☉🅾️◆
--█★⬇️✽●♥웃⌂⬅️
--▥❎🐱ˇ▒♪😐;:_
--><~^`
--0123456789

function buildslides()
	return {
		intro(),
		year1984(),
		simplergraphics(),
		simplermemory(),
		simplertools(),
		happy(),
		hwsummary(),
		picocpu(),
		colors(),
		dithering(),
		counter(),
		geometry(),
		andalso(),
		love(),
		credits(),
		credits2(),	
	}
end


function intro()	
	return makeslide("fagdag sonat", 
	{
		"-    velkommen til fagdag!    ",
		"                              ",
		"                              ",
		"-i dag skal vi ta dere tilbake",
		"           i tid              ",
		"                              ",
		"-til en era der ting var litt ",
		"            enklere           ",
		"                              ",
		"                              ",
		"                              ",
		"                              ",
	})
end

function year1984()
	return makeslide("1984", 
	{
		"-       aaret er 1984         ",
		"-  7-bit ascii er standard    ",
		"-   dvs ingen norske tegn     ",
		"- (men heller ingen problemer ",
		" med idiotiske tegnsett :d )  ",
		"-(ja utf-16, jeg ser paa deg!)",
		"  	                           ",
		"-   vi maatte klare oss med   ",
		" doble vokaler (ae, oe, aa)   ",
		"-eller v&re kreative og pr☉ve",
		" oss frem til det s★ bra ut  ",
	})
end

function simplergraphics()
	return makeslide("grafikk", 
	{
		"-    idag er vi bortskjemt    ",
		"                              ",
		"- med superraske prosessorer  ",
		"                              ",
		"- grafikkort som kan tegne    ",
		"  milliarder av farger        ",
		"  	                           ",
		"- i oppl☉sninger p★ tusener  ",
		"   av piksler i hver retning  ",
		" langt oftere enn menneskets  ",
		"    ☉ye kan oppfatte...       ",
	})
end

function simplermemory()
	return makeslide("minne", 
	{
		"- vi har st☉rre cpu cache     ",
		" enn maskiner fra den tiden   ",
		" hadde kapasitet p★ disk...   ",
		"                              ",
		"- og selv datamaskinen du har ",
		" i lomma har raskere prosessor",
		" og uendelig mer lagring enn  ",
		"    man kunne dr☉mme om da    ",
		"                              ",
		"                              ",
		"                              ",
	})
end

function simplertools()
	return makeslide("verkt☉y", 
	{
		"- ikke minst har verkt☉yene   ",
		" v★re endret seg betraktelig  ",
		"                              ",
		"- der det tidligere var vanlig",
		"    med basic eller assembly  ",
		"   og direkte manipulering av ",
		"        minneverdier...       ",
		"                              ",
		"- har vi n★ abstraksjoner,    ",
		"  frameworks, transpilere og  ",
		"  monads...                   ",
	})
end

function happy()
	local t = 0
	local init = function()
		t = 0
	end
	local draw = function()
		t += 1
		cls(7)
		for i=0,7 do
			printoutlined("men er vi lykkeligere?", 16 + 10 * cos(t/45 + i/30), 64 + 32*sin(t/90 + i/30), 8 + i)
		end
	end

	return makecustomslide("♥♥♥♥♥♥♥♥♥♥♥♥", init, draw)
end

function hwsummary()
	return makeslide("typisk spillsystem i dag", 
	{
		"- ~4-5Ghz prosessor           ",
		"- opptil 64 hardware-tr★der   ",
		"- 64 bit flyttall-aritmetikk  ",
		"- 16 gb ram                   ",
		"- 4 GB video ram              ",
		"- hardware-optimalisert 3D    ",
		"- 16 777 216 ulike farger     ",
		"- 3840 x 2160 oppl☉sning      ",		
		"- 144Hz framerate             ",
	})
end

function picocpu()
	local t = 0
	local myparticles = {}
	local init = function()
	end
	local draw = function()
		cls(0)
		local speed = 90
		local x = 64 + 48 * cos(t/speed)
		local y = 64 + 48 * sin(t/speed)
		circfill(x, y-2, 3, 8)
		local spark = make_sparks_ps(x, y)		
		add(myparticles, spark)
		local now = time()
		for ps in all(particle_systems) do 
			if contains(myparticles, ps) then
				update_ps(ps, now)
				draw_ps(ps)
			end
		end
		
		--cleanup dead particles:
		for ps in all(myparticles) do
			if not contains(particle_systems, ps) then
				del(myparticles, ps)
			end
		end

		starty = 48
		printoutlined("~4 mhZ cpu", 40, starty, 8, 7)
		printoutlined("32 kb memory", 40, starty + 10, 8, 7)
		printoutlined("8,16,32 bit word size", 24, starty + 20, 8, 7)
		printoutlined("16.16 fixed-point math", 24, starty + 30, 8, 7)
		t += 1
	end
	return makecustomslide("pico-8 cpu", init, draw)
end

function contains(tab, val)
    for index, value in pairs(tab) do
        if value == val then
            return true
        end
    end
    return false
end

function colors()
	local draw = function()
		cls(7)
		for i=0,3 do
			for j = 0,3 do
				circfill(i * 24 + 24, j * 24 + 34, 10, j * 4 + i)
			end
		end
	end
	return makecustomslide("16 beautiful colors", nil, draw)
end


function dithering()
	local t = 0
	local draw = function()  
		t += 1
		cls(7)
		local blends = {
			0b1111111111111111,
			0b1011111010111110,
			0b1110010110110101,
			0b0101101001011010,
			0b0001101001011010,
			0b0100000101000001,
		}
		
		local ramps ={
			{0,2,8,14,7},
			{0,4,9,15,7},
			{7},
			{0,4,9,10,7},
			{0,0,3,11,7},
			{0,0,1,12,7},
			{0,0,1,13,7},
			{7},
			{8,9,10,11,12,13},
			{7},
			{0,5,6,7},
		} 
		
		local width = 4
		local height = 8
		local spacing = 2
		
		local y = 10
		for ramp in all(ramps) do
			local x=2
			for i=1,#ramp do
			local j = min(i + 1, #ramp)
			local from = ramp[i]
			local to = ramp[j]
			if i == j then
				fillp(1)
				rectfill(x, y, x + width - 1, y + height - 1, from * 16 + to)
				x += width
			else
				for blend in all(blends) do
					fillp(bshl(blend, (t/4)%16))
					rectfill(x, y, x + width - 1, y + height - 1, from * 16 + to)
					x += width
				end
			end
			end
			y += height + spacing
		end
		fillp(0)
	end
	return makecustomslide("and even more with dithering", nil, draw)
end

function counter()
	local t = 0
	local init = function()
		t = 0
	end
	local draw = function()
		t += 1
		print(t, 64, 64, 15)
	end

	return makecustomslide("30 fps refresh!", init, draw)
end

function geometry()
	local t = 0
	local init = function()
		t = 0
	end
	local calcpos = function(t,slice)
		local x = 64 + 48 * sin(t / 120 + slice / 6)
		local y = 64 + 48 * cos(t / 120 + slice / 6)
		return x,y
	end
	local draw = function()
		cls(7)

		local x,y = calcpos(t, 0)
		circ(x,y,10,8)

		x,y = calcpos(t, 1)
		circfill(x,y,10,9)
		
		x,y = calcpos(t, 2)
		rect(x-10,y-10,x+10,y+10,10)
		
		x,y = calcpos(t, 3)
		rectfill(x-10,y-10,x+10,y+10,11)

		x,y = calcpos(t, 4)
		spr(6,x,y)
		
		x,y = calcpos(t, 5)
		palt(0, false)
		palt(7, true)
		sspr(0,16,16,8,x,y,16*sin(t/120),8,false,false)
		palt()
		t+=1
	end

	return makecustomslide("geometry and sprites", init, draw)
end

function andalso()
	local draw = function()
		cls(7)
		printoutlined("and one more thing", 32, 64, 8, 0)
	end

	return makecustomslide("++++++++", nil, draw)
end

function love()
	local t = 0
	local myparticles = {}

	local init = function()
	end
	local draw = function()
		cls(7)
		local speed = 90
		local x = 64 + 64 * cos(t/speed)
		local y = 96 + 16 * sin(2*t/speed)

		local sprx = 8
		local spry = 0
		local sprw = 8
		local sprh = 8
		local spark = make_sprites_ps(x,y,sprx,spry,sprw,sprh)	
		add(myparticles, spark)
		local now = time()
		for ps in all(particle_systems) do 
			if contains(myparticles, ps) then
				update_ps(ps, now)
				draw_ps(ps)
			end
		end
		
		--cleanup dead particles:
		for ps in all(myparticles) do
			if not contains(particle_systems, ps) then
				del(myparticles, ps)
			end
		end
		palt(0, false)
		palt(14, true)
		spr(32,x,y,3,1)
		palt()

		t += 1
		-- function make_sprites_ps(ex,ey,sprx,spry,sprw,sprh)
	end
	return makecustomslide("love", init, draw)
end
function credits()
	return makeslide("credits", 
	{
		"-            idea             ",
		"        terje wiesener        ",
		"                              ",
		"- content, code, presentation ",
		"        terje wiesener        ",
		"                              ",
		"-            music            ",
		"         david fredman        ",
		"                              ",
		"                              ",
		"                              ",
	})
end

function credits2()
	return makeslide("credits (contd)", 
	{
		"-    presentation framework   ",
		"  based on cart \"pico slides\" ",
		"       by user egvroom        ",
		"                              ",
		"             see              ", 
		"  https://www.lexaloffle.com/ ", 
		"       bbs/?tid=33347         ",
		"                              ",
		"                              ",
		"                              ",
		"                              ",
	})
end


-- *************************************************************
-- Messy slide logic starts here...
-- *************************************************************

-->8
--logic

function makeslide(title, rawstrings)
	local bullets = {}
	local strings = {}
	for str in all(rawstrings) do
		if sub(str,1,1) == "-" then
			add(strings, sub(str, 2, #str))
			add(bullets, 1)
		else
			add(strings, " " .. str)
			add(bullets, 0)
		end
	end
	local slide = {
		title = title,
		strings = strings,
		bullets = bullets,
		init = nil,
		draw = nil
	}
	return slide
end

function makecustomslide(title, init, draw)
	local slide = {
		title = title,
		strings = {},
		bullets = {},
		init = init,
		draw = draw
	}
	return slide
end

function printoutlined(text, x, y, color, bgcolor)
	if bgcolor == nil then
		bgcolor = 0
	end
	local offsets = {
		{-1,-1},
		{-1, 0},
		{-1, 1},
		{ 0,-1},
		{ 0, 1},
		{ 1,-1},
		{ 1, 0},
		{ 1, 1},
	}
	for offset in all(offsets) do
		print(text, x+offset[1], y + offset[2], bgcolor)
	end
	print(text, x, y, color)
end

function bshl(num, spaces)
	local shifted = num
	for i=0,spaces - 1 do
		local mask = 0b1000000000000000
		local firstbitset = band(mask, shifted) != 0
		shifted = shl(shifted,1)
		if firstbitset then
			shifted = bor(shifted,1)
		end
	end
	return shifted
end

--vars
headercolour = 5 --dark grey
slide = 0
slidecounter = 0
slidetitle = ""
stringhasbullet = {}
slidestrings = {}
bulletx = {}
bulletcolor = {}

slides = buildslides()
slidelimit = #slides - 1
currentslide = slides[1]

function _init()

	--particles for fun
	--comment out to disable
	make_starfield_ps()
	
	--show the 1st slide
	_slidechanged()
end

function _update()

	--controls
	--right/left moves points
	--up/down moves entire slides
	if (btnp(➡️)) then
		slidecounter+=1
		stayinloop = 1
		while stayinloop == 1 do
			if stringhasbullet[slidecounter + 1]
			 == 0 then
				slidecounter+=1
				if slidecounter >= 
					(#slidestrings + 1) then
					stayinloop = 0
				end
			else
				stayinloop = 0	
			end
		end	
		if slidecounter >= 
			(#slidestrings + 1) then
			slide+=1
			if slide > slidelimit then
				slide = slidelimit
			end
			_slidechanged()
		end
	end
	if (btnp(⬅️)) then
		slidecounter-=1
		if slidecounter < 0 then
			slide-=1
			if slide < 0 then
				slide = 0
			end
			_slidechanged()
		else
			bulletx[slidecounter+1] = 128
		end
	end
	if (btnp(⬆️)) then
		slide+=1
		if slide > slidelimit then
			slide = slidelimit
		end
		_slidechanged()
	end	
	if (btnp(⬇️)) then
		slide-=1
		if slide < 0 then
			slide = 0
		end
		_slidechanged()
	end
	
	--example of a bypass button
	--to get to certain slide
	if (btn(❎)) then
		slide = slidelimit
		_slidechanged()
	end
	
	if (btn(4)) then
		slide = 0
		_slidechanged()
	end
	
	--update particles
	--comment out to disable
 update_psystems()
end

function _draw()
	cls()

	if currentslide.draw != nil then
		currentslide.draw()
	else
		--draw particles
		--comment out to disable
		for ps in all(particle_systems) do
			draw_ps(ps)
		end
 
		--default content drawing:
		--stages
		ypos = 15
		for i=1,#slidestrings do
			if slidecounter >= i then
				bulletx[i]-=8
				if stringhasbullet[i] == 1 then
				
					if bulletx[i] < 2 then
						bulletx[i] = 2
					else
						make_sparks_ps(
							bulletx[i],ypos+4)
					end
					print("◆",bulletx[i],ypos,
					bulletcolor[i])
						print(slidestrings[i],
					bulletx[i]+8,ypos,7)
				end
				if stringhasbullet[i] == 0 then
				
					if bulletx[i] < 2 then
						bulletx[i] = 2
					end
					print(slidestrings[i],
					bulletx[i],ypos,7)
				end
				end
			ypos+=10
		end
	end

	--heading
	rectfill(0,0,128,8,headercolour)
	print(slidetitle,10,2,7)
   

	--little hint we're about
	--to change slide
	if slidecounter ==
		#slidestrings then
		print("😐",120,122,7)
	end
	
	--slide number 
	print((slide + 1),1,122,5)
	xoffset = 5
	if (slide + 1) > 9 then
		xoffset = 9
	end
	print("/",xoffset,122,5)
	print((slidelimit + 1),xoffset+4,122,5)
end

function _slidechanged()

	--new slide
	slidecounter = 0

	currentslide = slides[slide + 1]

	slidetitle = currentslide.title
	slidestrings = currentslide.strings
	stringhasbullet = currentslide.bullets
	
	if currentslide.init != nil then
		currentslide.init()
	end

	--bullets
	bulletx = {}
	for i=0,#slidestrings do
		bulletx[i] = 128
	end
	bulletcolor = {}
	-- start bullet coloring from 8

	color = 8
	for i=0,#slidestrings do
		if stringhasbullet[i] == 1 then
			bulletcolor[i] = (color % 8) + 8
			color += 1
		end
	end
end

-- advanced particle system
-- blog.ccatgames.com

function deleteallps()
	for ps in all(particle_systems) do
		del(particle_systems, ps)
	end
end

-- sample particle system constructors -------------------------
function make_starfield_ps()
	local ps = make_psystem(4,6, 1,2,0.5,0.5)
	ps.autoremove = false
	add(ps.emittimers,
		{
			timerfunc = emittimer_constant,
			params = {nextemittime = time(), speed = 0.01}
		}
	)
	add(ps.emitters, 
		{
			emitfunc = emitter_box,
			params = { minx = 125, maxx = 127, miny = 0, maxy= 127, minstartvx = -2.0, maxstartvx = -0.5, minstartvy = 0, maxstartvy=0 }
		}
	)
	add(ps.drawfuncs,
		{
			drawfunc = draw_ps_pixel,
			params = { colors = {4,5,4,5,4,5,4,5,4,5,4,5,4,5} }
		}
	)
end

function make_sprites_ps(ex,ey,sprx,spry,sprw,sprh)
	local ps = make_psystem(1,1,0.1,0.5,2,3)
	
	add(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 4}
		}
	)
	add(ps.emitters, 
		{
			emitfunc = emitter_point,
			params = { x = ex, y = ey, minstartvx = -1, maxstartvx = 1, minstartvy = 0, maxstartvy=-0 }
		}
	)
	add(ps.drawfuncs,
		{
			drawfunc = draw_ps_scalespr,
			params = { sprx=sprx,spry=spry,sprw=sprw,sprh=sprh }
		}
	)
	add(ps.affectors,
		{ 
			affectfunc = affect_force,
			params = { fx = 0, fy = -0.1 }
		}
	)
	return ps
end


function make_sparks_ps(ex,ey)
	local ps = make_psystem(0.3,0.7, 1,2,0.5,0.5)
	
	add(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 10}
		}
	)
	add(ps.emitters, 
		{
			emitfunc = emitter_point,
			params = { x = ex, y = ey, minstartvx = -1.5, maxstartvx = 1.5, minstartvy = -3, maxstartvy=-2 }
		}
	)
	add(ps.drawfuncs,
		{
			drawfunc = draw_ps_fillcirc,
			params = { colors = {7,10,15,9,4,5} }
		}
	)
	add(ps.affectors,
		{ 
			affectfunc = affect_force,
			params = { fx = 0, fy = 0.3 }
		}
	)
	return ps
end

-- particle system library -----------------------------------
particle_systems = {}

function make_psystem(minlife, maxlife, minstartsize, maxstartsize, minendsize, maxendsize)
	local ps = {}
	-- global particle system params
	ps.autoremove = true

	ps.minlife = minlife
	ps.maxlife = maxlife
	
	ps.minstartsize = minstartsize
	ps.maxstartsize = maxstartsize
	ps.minendsize = minendsize
	ps.maxendsize = maxendsize
	
	-- container for the particles
	ps.particles = {}

	-- emittimers dictate when a particle should start
	-- they called every frame, and call emit_particle when they see fit
	-- they should return false if no longer need to be updated
	ps.emittimers = {}

	-- emitters must initialize p.x, p.y, p.vx, p.vy
	ps.emitters = {}

	-- every ps needs a drawfunc
	ps.drawfuncs = {}

	-- affectors affect the movement of the particles
	ps.affectors = {}

	add(particle_systems, ps)

	return ps
end

function update_psystems()
	local timenow = time()
	for ps in all(particle_systems) do
		update_ps(ps, timenow)
	end
end

function update_ps(ps, timenow)
	for et in all(ps.emittimers) do
		local keep = et.timerfunc(ps, et.params)
		if (keep==false) then
			del(ps.emittimers, et)
		end
	end

	for p in all(ps.particles) do
		p.phase = (timenow-p.starttime)/(p.deathtime-p.starttime)

		for a in all(ps.affectors) do
			a.affectfunc(p, a.params)
		end

		p.x += p.vx
		p.y += p.vy
		
		local dead = false
		if (p.x<0 or p.x>127 or p.y<0 or p.y>127) then
			dead = true
		end

		if (timenow>=p.deathtime) then
			dead = true
		end

		if (dead==true) then
			del(ps.particles, p)
		end
	end
	
	if (ps.autoremove==true and count(ps.particles)<=0) then
		del(particle_systems, ps)
	end
end

function draw_ps(ps, params)
	for df in all(ps.drawfuncs) do
		df.drawfunc(ps, df.params)
	end
end

function emittimer_burst(ps, params)
	for i=1,params.num do
		emit_particle(ps)
	end
	return false
end

function emittimer_constant(ps, params)
	if (params.nextemittime<=time()) then
		emit_particle(ps)
		params.nextemittime += params.speed
	end
	return true
end

function emit_particle(psystem)
	local p = {}

	local e = psystem.emitters[flr(rnd(#(psystem.emitters)))+1]
	e.emitfunc(p, e.params)	

	p.phase = 0
	p.starttime = time()
	p.deathtime = time()+rnd(psystem.maxlife-psystem.minlife)+psystem.minlife

	p.startsize = rnd(psystem.maxstartsize-psystem.minstartsize)+psystem.minstartsize
	p.endsize = rnd(psystem.maxendsize-psystem.minendsize)+psystem.minendsize

	add(psystem.particles, p)
end

function emitter_point(p, params)
	p.x = params.x
	p.y = params.y

	p.vx = rnd(params.maxstartvx-params.minstartvx)+params.minstartvx
	p.vy = rnd(params.maxstartvy-params.minstartvy)+params.minstartvy
end

function emitter_box(p, params)
	p.x = rnd(params.maxx-params.minx)+params.minx
	p.y = rnd(params.maxy-params.miny)+params.miny

	p.vx = rnd(params.maxstartvx-params.minstartvx)+params.minstartvx
	p.vy = rnd(params.maxstartvy-params.minstartvy)+params.minstartvy
end

function affect_force(p, params)
	p.vx += params.fx
	p.vy += params.fy
end

function affect_forcezone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx += params.fx
		p.vy += params.fy
	end
end

function affect_stopzone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx = 0
		p.vy = 0
	end
end

function affect_bouncezone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx = -p.vx*params.damping
		p.vy = -p.vy*params.damping
	end
end

function affect_attract(p, params)
	if (abs(p.x-params.x)+abs(p.y-params.y)<params.mradius) then
		p.vx += (p.x-params.x)*params.strength
		p.vy += (p.y-params.y)*params.strength
	end
end

function affect_orbit(p, params)
	params.phase += params.speed
	p.x += sin(params.phase)*params.xstrength
	p.y += cos(params.phase)*params.ystrength
end

function draw_ps_fillcirc(ps, params)
	for p in all(ps.particles) do
		c = flr(p.phase*count(params.colors))+1
		r = (1-p.phase)*p.startsize+p.phase*p.endsize
		circfill(p.x,p.y,r,params.colors[c])
	end
end

function draw_ps_pixel(ps, params)
	for p in all(ps.particles) do
		c = flr(p.phase*count(params.colors))+1
		pset(p.x,p.y,params.colors[c])
	end	
end

function draw_ps_streak(ps, params)
	for p in all(ps.particles) do
		c = flr(p.phase*count(params.colors))+1
		line(p.x,p.y,p.x-p.vx,p.y-p.vy,params.colors[c])
	end	
end

function draw_ps_animspr(ps, params)
	params.currframe += params.speed
	if (params.currframe>count(params.frames)) then
		params.currframe = 1
	end
	for p in all(ps.particles) do
		pal(7,params.colors[flr(p.endsize)])
		spr(params.frames[flr(params.currframe+p.startsize)%count(params.frames)],p.x,p.y)
	end
	pal()
end

function draw_ps_agespr(ps, params)
	for p in all(ps.particles) do
		local f = flr(p.phase*count(params.frames))+1
		spr(params.frames[f],p.x,p.y)
	end	
end

function draw_ps_rndspr(ps, params)
	for p in all(ps.particles) do
		pal(7,params.colors[flr(p.endsize)])
		spr(params.frames[flr(p.startsize)],p.x,p.y)
	end	
	pal()
end

function draw_ps_scalespr(ps, params)
	for p in all(ps.particles) do		
		local r = (1-p.phase)*p.startsize+p.phase*p.endsize
		sspr(params.sprx,params.spry,params.sprw,params.sprh,p.x,p.y,params.sprw * r,params.sprw * r)
	end	
	pal()
end


__gfx__
00000000000000000000000000050000000000000000000000aaa700000000000000000077777777777777777777777777777777000000000000000000000000
000000000880880009aaaa700000000000000000000000000aa99a70000000000000000077777777777777788777777777777777000000000000000000000000
00000000888887800a0aa0a000060000b3b77a9a88777788099009a7000000000000000077777777777777788777777777777777000000000000000000000000
00000000888888800aaaaaa0506760503b3779a988789788000009aa000000000000000077777777777777888877777777777777000000000000000000000000
00000000088888000a9aa9a000060000b3b77a9a8878878800099aa0000000000000000077777777777777877877777777777777000000000000000000000000
00000000008880000aa00aa0000000003b3779a988798788000aaa00000000000000000077777777777778877887777777777777000000000000000000000000
000000000008000009aaaa9000050000b3b77a9a8877778800000000000000000000000077777777777778888887777777777777000000000000000000000000
000000000000000000000000000000000000000000000000000aa000000000000000000077777777777778888887777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000077777777777778888887777777777777000000000000000000000000
00000000077777000777770007777770007777700770077000000000000000000000000077777777777778888887777777777777000000000000000000000000
00000000077007700770077007700770077000000770077000000000000000000000000077777777777788888888777777777777000000000000000000000000
00000000077777000770077007700770077000000770077000000000000000000000000077777777777888888888877777777777000000000000000000000000
00000000077007700777770007700770077000000777700000000000000000000000000077777777777888888888877777777777000000000000000000000000
00000000077007700770077007700770077000000770077000000000000000000000000077777777778888888888887777777777000000000000000000000000
00000000077777000770077007777770007777700770077000000000000000000000000077777777778888888888887777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000077777777788888888888888777777777000000000000000000000000
00000000000000000eeeeeee00000000000000000000000000000000000000000000000077777777788778888887788777777777000000000000000000000000
05555566666555550eeeeeee00000000000000000000000000000000000000000000000087777777787777888877778777777777000000000000000000000000
05555555555555550eeeeeee00000000000000000000000000000000000000000000000087777777777777888877777777777778000000000000000000000000
05505566666555550eeeeeee00000000000000000000000000000000000000000000000088777777777777878777777777777778000000000000000000000000
05000555555555550eeeeeee00000000000000000000000000000000000000000000000087777777777777778777777777777788000000000000000000000000
05505570707585850eeeeeee00000000000000000000000000000000000000000000000088777777777777778777777777777778000000000000000000000000
05555555555555550eeeeeee00000000000000000000000000000000000000000000000088777777777777778777777777777788000000000000000000000000
00000000000000000eeeeeee00000000000000000000000000000000000000000000000088877877777777778777777778777788000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088777877777777778777777778777888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088878887777777778777777788877788000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088877887777777778777777788777888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088887888877877777778777888777888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088877888777887777778777888878888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088887888877877777788778888777888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088887888877887777888788888778888000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088887888887888788888788888788888000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888887777777888887778777887788778888887787888777877887778877888887777777888888888888888888888888888888888888888888888888888
88888888887877787888887878878878887878888878887888878878787888788888887877787888888888888888888888888888888888888888888888888888
88888888887777777888887778878878887878888877787888878878787788777888887777777888888888888888888888888888888888888888888888888888
88888888887888887888887888878878887878888888787888878878787888887888887888887888888888888888888888888888888888888888888888888888
88888888887777777888887888777887787788888877887778777877787778778888887777777888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
00000000000005000000000000000000000000000000050000000000000000000000000400000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000040000000000000000000000000000
00000000007070777070700000777070707700770070700700000000000000500000000000000000000000000000000000000000000000000000000000000000
00000000007070700070700000707070707070707070700700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007770770077700000770070707070707077700700000000000000000005000000000000000000000000000000000000000000000000000000000000
00000000007070700000700000707070707070707000700000000000000000000000000000000400000000000000000000000000000000000000000000000000
00000000007070777077700000777007707770777077700700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000400000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005040000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000400000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000
00000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000050000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000
00000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000f0000000000000000000000000000000000000000000000000000000f000000000000000f000000000000000f000f0000000000000000000000
0000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000f000000000000000f00000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000400000000000000000000000
00000000000000000000000000000000505000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000
00000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000
00000005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000
00000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000f000000000000000000
00000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000f00000000000000f000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000400000000000000f000000000000000000000000000000000000000000
000000000f0f000f000000000000f000000000000000000000000000000000000000000000f0f000000000000000000f00000000000000000000000000000000
000000000000000000000000000000f000000000000000000000000000000050000000000000000f00000000000f000000000000000000000040000000000000
000000000f0000000ff000000000000000000000000f00000000000000000000000000000000000000005000000000000000000000f000000f00000000000000
00000000000000f0000500000000000000000000400000000000000000000000f0f000000000000000000000000000000000000000000f000000000000000000
000000000000000000000000000005000000000000000000000000f0f00000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000f00000f00000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000
000000000000000000000000000000000000000000f000f000000000000000000f00000000005050000000000000000000000000000000000000000400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000f0005000000f000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000000000
00000000f0f000000000f00000000000000f000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000f000
0000000000f00f00000000000000000000000000000000000000000000000000f00000000000f000000000400000000000000000000f00000000000000000000
00000000000000000000000000000000f000000000000000000000000000000000000000500000f0000f00000000000000000000000000000000500000000000
000000000000000000000000000f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f00
00f000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000f0000
00000000000000000400000000000f0000000000000000000000000000f000000000500000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000004000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000
05550000055500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000077777770
00050000000500000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040070777070
05550050000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777770
05000000000500000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070000070
05550050000500000000000000000000000000000000000000000000000000500000000004000000000000000000000000000000000000000000000077777770
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__sfx__
002400200e0100e0210e0310e0410e0510e0510e0510e0510e0510e0510e0410e0310e0210e0110e0110e0110e0210e0310e0410e0510e0610e0510e0610e0610e0510e0410e0310e0210e0110e0110e0210e021
002400200e0110e0210e0310e0410e0510e0510e0510e0510e0510e0510e0410e0310e0210e0110e0110e0110e0210e0310e0410e0510e0610e0510e0610e0610e0510e0410e0310e0210e0110e0110e0210e021
001700201503115021150111502115041150411503115021150111502115031150411505115061150511504115031150211501115031150411505115061150511504115031150211501115031150411505115061
001d00181d0111d0211d0311d0411d0411d0511d0611d0611d0611d0511d0411d0311d0111d0211d0311d0211d0511d0611d0611d0611d0511d0411d0311d0211d0111d0211d0311d0211d0511d0611d0411d031
001f001d1807118061180511804118031180211801118011180211803118041180511806118071180611805118041180311802118011180111802118031180411805118061180711807118061180511804118031
002400001a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a0511a051
001000000c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c0500c050
002200201c0111c0211c0311c0411c0411c0511c0611c0611c0611c0511c0411c0311c0211c0111c0211f0311f0411f0511f0611f0611f0611f0511f0411f0311f0211f0111f0411f0411f0511f0611f0411f021
001000180e0500e0501a0500e0300e0501a1400e0500e0501a0500e0500e0301a7300e0200e0301a0500e0500e0401a5201a0200e0301a0500e0500e0401a0500e0500e0501a0500e0500e0501a0500e0500e050
001000200a0110a0210a0310a0410a0610a0610a0610a0510a0410a0310a0210a0110a0110a0210a0310a0410a0510a0610a0610a0610a0510a0410a0310a0210a0110a0210a0310a0410a0610a0410a0310a021
001400201601116021160211603116041160311602116011160211603116041160311602116011160111602116031160411605116061160611606116051160411603116031160211601116021160311604116021
001700201503015021150111502115041150411503115021150111502115031150411505115051150511504115031150211501115031150411505115051150511504115031150211501115031150411505115061
002400001a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a0501a050
001000040e0500e0501a0500e0300e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e0501a0500e0500e050
001000180e0500e0501a0500e0300e0501a1400e0500e0501a0500e0500e0301a7300e0200e0301a0500e0500e0401a5201a6250e0301a0500e0500e0401a0500e0500e0501a0500e0500e0501a0500e0500e050
001000080e0530e055020550e0330e0550e1450e665023651a0530e0500e0301a7330e0200e0301a0500e0500e0431a5201a6250e0301a0500e0500e0401a0500e0500e0501a0500e0500e0501a0500e0500e050
0010000021255212151a25000000262103225021252000001a25000000262463221521255212151f25000000212552d2151a250000001a2152621521255000151a25026215322150000021250212512225022271
001000101a0101a0211a0211a0211d0111d2511d2511d2511a0101a0101a0101a0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000222552221522250212551a105002051d255002001d25000000262453220517205212051f20000000212552d2151a250000001a2152621521255000151a25026215322150000021250212512225022271
001000181605016050220501603016050221401605016050220501605016030227301602016030220501605016040225202262516030220501605016040220501605016050220501605016050220501605016050
0010001813050130501f05013030130501f14013050130501f05013050130301f73013020130301f05013050130401f52013625130301f05013050130401f05013050130501f05013050130501f0501305013050
00100008262301a2211a2311a22002215022252123024250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 01024344
00 01024344
00 01020344
00 01020744
00 01020344
00 01020544
01 01020508
00 01020308
00 01020508
00 01020408
00 01020508
00 090a050e
01 000b0c0f
00 030b0c0f
00 0407060f
00 0104030f
00 090a0c0f
00 0b0a0c0f
00 0b0d0c0f
00 0b0d0c0f
00 10110e0f
00 1011130f
00 1211140f
00 10110e0f
00 15110e0f
00 15110e0f
00 10110e0f
00 1011130f
00 1211140f
02 10110e0f

